<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<http auto-config="true">
		<!-- enable csrf protection -->
		<csrf disabled="true" />

		<form-login login-page="/plain/login.html"
			default-target-url="/*/dashboard.html" authentication-failure-url="/plain/login.html?error=invalid_user" />

		<logout invalidate-session="true" logout-url="/j_spring_security_logout"
			logout-success-url="/plain/login.html?loggedout=true" />

		<intercept-url pattern="/*/dashboard.html" access="isAuthenticated()" />

		<intercept-url pattern="/_cdn/**" access="permitAll()" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT U.email AS login, U.senha AS password, U.enabled 
				FROM mw_user U WHERE U.email = ? "
				authorities-by-username-query="SELECT users.email AS login, role.role AS role FROM 
                mw_user users,
                mw_profile_role profile_role,
                mw_role role WHERE 
                	users.profile_id = profile_role.profile_id AND
                	profile_role.role_id = role.id AND     
                	users.email = ? " />
		</authentication-provider>
	</authentication-manager>
	<global-method-security secured-annotations="enabled" />

</beans:beans>